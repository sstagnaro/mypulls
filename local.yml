# This playbook is intended to be run with ansible-pull
# on the control node where playbooks are usually executed
#
# The goal is to check against Git repos and pull them
# on a specific path in the control node
#
# Usage:
# ansible-pull --url https://git.example.com/pull_prj
#
# The above command can be scheduled in the crontab
# to perform periodic update checks
# 
# N.B.: playbook name has to be left to local.yml
---
- name: Check if Ansible projects are up to date
  hosts: localhost

  vars:
    git_prefix: https://github.com/sstagnaro
    git_repos:
      - rht-contrib
      - epics-dispatcher-rhel8
      - postgres-gis
    repos_path: /home/sstagnaro/repos

  tasks:
    - name: Check {{ repos_path}} directory
      file:
        path: "{{ repos_path}}"
        state: directory

    - name: Pull repos or clone them if not already present
      git:
        repo: "{{ git_prefix }}/{{ item }}.git"
        dest: "{{ repos_path }}/{{ item }}"
        clone: true
        update: true
      loop: "{{ git_repos }}"
...
